@page "/counter/{initialCount:int?}"
@page "/counter2"

@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<MyButton OnClick="IncrementCount" class="btn btn-success">Press My Button :)</MyButton>

<p> event.ClientX: @MyEvent</p>

<div class="mt-3">
    <input @bind="text" @bind:event="oninput" @bind:after="Search" type="text">
    <button @onclick="OnClick">Clear</button>
    <p>Text is: @text</p>
    <p>Search result is: @searchResult</p>
</div>


<div style="background-color: lightblue; height: 100px;" @onmouseover="MouseOver" @onmouseleave="OnMouseLeave">@divText
</div>

@code {

    private int currentCount = 0;
    string text = "";
    string divText = "Mouse Out";
    string searchResult = "";

    protected override void OnInitialized()
    {
        currentCount = InitialCount;
    }

    [Parameter]
    public int InitialCount { get; set; }
    public double MyEvent { get; set; }
    private void IncrementCount(MouseEventArgs e)
    {

        MyEvent = e.ClientX;
        currentCount++;
    }
    @* private void OnInputEvent(ChangeEventArgs e) => text = (string)e.Value!; *@
    private void MouseOver(MouseEventArgs e) => divText = "Mouse Over";
    private void OnMouseLeave(MouseEventArgs e) => divText = "Mouse Left";
    private void OnClick(MouseEventArgs e) => text = "";

    async Task Search(){
        searchResult = "Searching....";
        await Task.Delay(2000);
        searchResult = $"Found {Random.Shared.Next()} results";
    }
}
